#Objetivo
#Practicar el concepto de funciones. Preparar la parte lógica para el registro de usuarios.
#
#Consigna
#
#Crear un programa que permita emular el registro y almacenamiento de usuarios en una base de datos. Crear el programa utilizando el concepto de funciones, diccionarios, bucles y condicionales.
#Formato

#Sugerencias
#El formato de registro es: Nombre de usuario y Contraseña.
#Utilizar una función para almacenar la información y otra función para mostrar la información.
#Utilizar un diccionario para almacenar dicha información, con el par usuario-contraseña (clave-valor).
#Utilizar otra función para el login de usuarios, comprobando que la contraseña coincida con el usuario.

usuarios = open("usuarios.txt","a")

def registro():
  user = validar_user()
  usuarios = open("usuarios.txt","r")
  for data in usuarios:
    detalles = data.split("|")
    while detalles[0] == user:
      print("Usuario existente, intente nuevamente")
      usuario = input("Usuario: ")
  psw = validar_psw()
  usuarios = open("usuarios.txt","a")
  usuarios.write(f"{user}" + "|" + f"{psw}" + "|\n")
  print("Registro exitoso")

def validar_user():
  import re #encontré esta función para validar datos de psw/user
  while True:
    user = input("Usuario: ")
    is_valid = False
    if (len(user)<6 or len(user)>12):
      print("Error! El número de caracteres debe ser entre 6 y 12")
      continue
    elif re.search("[\s]",user):
      print("Error! No puede contener espacios")
      continue
    else:
      is_valid = True
      break
  if(is_valid):
    return user
    print("Contraseña válida")

def validar_psw():
  import re #encontré esta función para validar datos de psw/user
  while True:
    psw = input("Contraseña: ")
    is_valid = False
    if (len(psw)<6 or len(psw)>12):
      print("Error! El número de caracteres debe ser entre 6 y 12")
      continue
    elif not re.search("[A-Z]",psw):
      print("Error! Debe contener al menos una mayúscula")
      continue
    elif not re.search("[a-z]",psw):
      print("Error! Debe contener al menos una minúscula")
      continue
    elif not re.search("[1-9]",psw):
      print("Error! Debe contener al menos un número")
      continue
    elif not re.search("[~!@#$%^&*]",psw):
      print("Error! Debe contener al menos un caracter especial [~!@#$%^&*]")
      continue
    elif re.search("[\s]",psw):
      print("Error! No puede contener espacios")
      continue
    else:
      is_valid = True
      break
  if(is_valid):
    return psw
    print("Contraseña válida")

def log_in():
  print("Bienvenido!\n")
  print("Seleccione una de las siguientes opciones:\n")
  print("[1] Registrarme")
  print("[2] Iniciar sesión")
  opcion = input("Ingrese un número: ")
  print("")
  return opcion

def iniciar_sesion():
    usuarios = open("usuarios.txt", "r")
    usuarios_registrados = [data.split("|") for data in usuarios]
    usuarios.close()
    usuario_encontrado = False
    psw_encontrada = False
    intentos = 3
    while not usuario_encontrado or not psw_encontrada and intentos > 0:
        user2 = input("Usuario: ")
        psw2 = input("Contraseña: ")
        for detalles in usuarios_registrados:
            if detalles[0] == user2:
                usuario_encontrado = True
                if detalles[1] == psw2:
                    psw_encontrada = True
                    break
        if not usuario_encontrado or not psw_encontrada:
            intentos -= 1
            print(f"Credenciales incorrectas, quedan {intentos} intentos")
    if psw_encontrada:
        print("\nInicio de sesión exitoso")
    else:
        print("Excediste el número de intentos. Intente nuevamente más tarde")


ok = 1
while ok == 1:
    try:
        opcion = int(log_in())
        if opcion == 1:
            registro()
            ok = 0
        elif opcion == 2:
            iniciar_sesion()
            ok = 0
        else:
            print("Opción no válida")
    except ValueError:
        print("Error: Ingrese un número válido")
    except Exception as e:
        print(f"Error inesperado: {e}")
